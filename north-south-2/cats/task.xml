<?xml version="1.0" encoding="UTF-8"?>
<CATS version="1.11">
	<Problem title="Окраска двудольного графа" lang="ru" tlimit="2" mlimit="256M"
    author="В. Пантелеев" inputFile="*STDIN" outputFile="*STDOUT"
    saveInputPrefix="50B" saveOutputPrefix="50B" saveAnswerPrefix="50B">
    
		<Keyword code="cmp.trivial"/>
		<ProblemStatement>
			<p>
В волшебном королевстве Зеландия два соседних королевства: Севера и Юга. 
Они разделены широкой рекой, но между ними построены мосты,
соединяющие города обоих королевств.

Каждый город в королевстве Севера может быть связан только с городом
в королевстве Юга, и наоборот. Правители решили, что для улучшения
взаимопонимания между королевствами, города должны быть окрашены в именно в n
кол-во цветов.

Однако они заметили, что два соседних города не должны быть одного цвета, 
чтобы избежать конфликтов.

Помоги правителю Зеландии раскрасить города Севера и Юга.
Если есть несколько способов раскарсить города, выведите любой из них.
            </p>
		</ProblemStatement>
		<InputFormat>
			<p>
Три числа n, m и k:
    n (1 ≤ n ≤ 1000) — суммарное количество городов в каждом королевстве
    m (1 ≤ m ≤ 1000) - суммарное кол-во мостов
    k (1 ≤ k ≤ n) - кол-во цветов в которые надо покрасить города
Далее следует m строк, каждая из которых содержит два числа:
    u (1 ≤ u ≤ n) — номер города в котором начинается мост
    v (1 ≤ v ≤ n) — номер города в котором мост заканчивается
            </p>
			<p>
Пример входных данных
6 5 3
4 3
2 3
4 5
2 6
1 6
            </p>
		</InputFormat>
		<OutputFormat>
			<p>
Выходные данные должны содержать k строк
Далее должно иди k строк строки с следующем формате:
    n - кол-во городов опредленного цвета
    Далее через пробел идут n чисел - номера городов данного цвета

Пример выходных данных
3 1 2 5
2 3 6
1 4
            </p>
		</OutputFormat>
		<ProblemConstraints>
			<p>$1 \leq n \leq 1000$</p>
            <p>$1 \leq m \leq 1000$</p>
			<p>$1 \leq u \leq n$</p>
			<p>$1 \leq v \leq n$</p>
            <p>$1 \leq k \leq n$</p>
		</ProblemConstraints>
		<Import type="checker" guid="std.nums"/>
		<Solution src="solution.py" name="sol"/>
		<Generator src="gen.py" name="gen" outputFile="%0n.in" timeLimit="10"/>
		<!-- <Sample rank="1">
			<SampleIn>3</SampleIn>
			<SampleOut>1</SampleOut>
		</Sample>
		<Sample rank="2">
			<SampleIn>5</SampleIn>
			<SampleOut>3</SampleOut>
		</Sample> -->
		<Test rank="1-10" points="1">
			<In genAll="1" use="gen"/>
		</Test>
		<Test rank="1-10">
			<Out use="sol"/>
		</Test>
	</Problem>
</CATS>